

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 15 23:18:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0000                     	;# 
   209     0001                     	;# 
   210     0002                     	;# 
   211     0003                     	;# 
   212     0004                     	;# 
   213     0005                     	;# 
   214     0006                     	;# 
   215     0007                     	;# 
   216     0008                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0088                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     001E                     _ADRESH	set	30
   287     000C                     _PIR1bits	set	12
   288     001F                     _ADCON0bits	set	31
   289     000B                     _INTCON	set	11
   290     0007                     _PORTC	set	7
   291     0086                     _TRISBbits	set	134
   292     0089                     _TRISEbits	set	137
   293     0085                     _TRISAbits	set	133
   294     008C                     _PIE1	set	140
   295     009F                     _ADCON1bits	set	159
   296     0087                     _TRISC	set	135
   297     0189                     _ANSELHbits	set	393
   298     0188                     _ANSELbits	set	392
   299     0189                     _ANSELH	set	393
   300     0188                     _ANSEL	set	392
   301                           
   302                           	psect	cinit
   303     000F                     start_initialization:	
   304                           ; #config settings
   305                           
   306     000F                     __initialization:
   307     000F                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310     000F                     __end_of__initialization:
   311     000F  0183               	clrf	3
   312     0010  120A  118A  28A8   	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	cstackCOMMON
   315     0070                     __pcstackCOMMON:
   316     0070                     ?_adc_setup:
   317     0070                     ?_adc_read:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     ?_adc_output:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ??_adc_output:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ?_main:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_isr:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ??_isr:	
   333                           ; 1 bytes @ 0x0
   334                           
   335                           
   336                           ; 1 bytes @ 0x0
   337     0070                     	ds	2
   338     0072                     ??_adc_setup:
   339     0072                     ?_adc_channel:	
   340                           ; 1 bytes @ 0x2
   341                           
   342     0072                     ??_adc_read:	
   343                           ; 1 bytes @ 0x2
   344                           
   345     0072                     adc_channel@channel:	
   346                           ; 1 bytes @ 0x2
   347                           
   348                           
   349                           ; 2 bytes @ 0x2
   350     0072                     	ds	1
   351     0073                     adc_read@channel:
   352                           
   353                           ; 1 bytes @ 0x3
   354     0073                     	ds	1
   355     0074                     ??_adc_channel:
   356     0074                     ??_main:	
   357                           ; 1 bytes @ 0x4
   358                           
   359                           
   360                           ; 1 bytes @ 0x4
   361     0074                     	ds	1
   362     0075                     main@ch:
   363                           
   364                           ; 1 bytes @ 0x5
   365     0075                     	ds	1
   366                           
   367                           	psect	maintext
   368     00A8                     __pmaintext:	
   369 ;;
   370 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   371 ;;
   372 ;; *************** function _main *****************
   373 ;; Defined at:
   374 ;;		line 33 in file "main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  ch              1    5[COMMON] unsigned char 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : B00/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         1       0       0       0       0
   390 ;;      Temps:          1       0       0       0       0
   391 ;;      Totals:         2       0       0       0       0
   392 ;;Total ram usage:        2 bytes
   393 ;; Hardware stack levels required when called: 3
   394 ;; This function calls:
   395 ;;		_adc_channel
   396 ;;		_adc_read
   397 ;;		_adc_setup
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403     00A8                     _main:	
   404                           ;psect for function _main
   405                           
   406     00A8                     l759:	
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   409                           
   410     00A8  1683               	bsf	3,5	;RP0=1, select bank1
   411     00A9  1303               	bcf	3,6	;RP1=0, select bank1
   412     00AA  0187               	clrf	7	;volatile
   413     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   414     00AC  1303               	bcf	3,6	;RP1=0, select bank0
   415     00AD  0187               	clrf	7	;volatile
   416     00AE  01F5               	clrf	main@ch
   417     00AF                     l761:
   418     00AF  120A  118A  20CA  120A  118A  	fcall	_adc_setup
   419     00B4                     l763:
   420     00B4  3000               	movlw	0
   421     00B5  00F2               	movwf	adc_channel@channel
   422     00B6  00F3               	movwf	adc_channel@channel+1
   423     00B7  120A  118A  2013  120A  118A  	fcall	_adc_channel
   424     00BC                     l765:
   425     00BC  3021               	movlw	33
   426     00BD  00F4               	movwf	??_main
   427     00BE                     u27:
   428     00BE  0BF4               	decfsz	??_main,f
   429     00BF  28BE               	goto	u27
   430     00C0                     l767:
   431     00C0  0875               	movf	main@ch,w
   432     00C1  120A  118A  20FA  120A  118A  	fcall	_adc_read
   433     00C6  28BC               	goto	l765
   434     00C7  120A  118A  280C   	ljmp	start
   435     00CA                     __end_of_main:
   436                           
   437                           	psect	text1
   438     00CA                     __ptext1:	
   439 ;; *************** function _adc_setup *****************
   440 ;; Defined at:
   441 ;;		line 15 in file "C:/Users/kirby/MPLABXProjects/adc.X/adc.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          1       0       0       0       0
   458 ;;      Totals:         1       0       0       0       0
   459 ;;Total ram usage:        1 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 2
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469     00CA                     _adc_setup:	
   470                           ;psect for function _adc_setup
   471                           
   472     00CA                     l677:	
   473                           ;incstack = 0
   474                           ; Regs used in _adc_setup: [wreg+status,2+status,0]
   475                           
   476                           
   477                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 16:     INTCON = 0xC0;
   478     00CA  30C0               	movlw	192
   479     00CB  008B               	movwf	11	;volatile
   480     00CC                     l679:
   481                           
   482                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 17:     ADCON1bits.ADFM = 0;
   483     00CC  1683               	bsf	3,5	;RP0=1, select bank1
   484     00CD  1303               	bcf	3,6	;RP1=0, select bank1
   485     00CE  139F               	bcf	31,7	;volatile
   486     00CF                     l681:
   487                           
   488                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 18:     ADCON1bits.VCFG0 = 0;
   489     00CF  121F               	bcf	31,4	;volatile
   490     00D0                     l683:
   491                           
   492                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 19:     ADCON1bits.VCFG1 = 0;
   493     00D0  129F               	bcf	31,5	;volatile
   494                           
   495                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 20:     PIE1 = 0b01000000;
   496     00D1  3040               	movlw	64
   497     00D2  008C               	movwf	12	;volatile
   498     00D3                     l685:
   499                           
   500                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 22:     ANSEL = 0x00;
   501     00D3  1683               	bsf	3,5	;RP0=1, select bank3
   502     00D4  1703               	bsf	3,6	;RP1=1, select bank3
   503     00D5  0188               	clrf	8	;volatile
   504     00D6                     l687:
   505                           
   506                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 23:     ANSELH = 0x00;
   507     00D6  0189               	clrf	9	;volatile
   508     00D7                     l689:
   509                           
   510                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 25:     ADCON0bits.ADCS = 1;
   511     00D7  1283               	bcf	3,5	;RP0=0, select bank0
   512     00D8  1303               	bcf	3,6	;RP1=0, select bank0
   513     00D9  081F               	movf	31,w	;volatile
   514     00DA  393F               	andlw	-193
   515     00DB  3840               	iorlw	64
   516     00DC  009F               	movwf	31	;volatile
   517     00DD                     l691:
   518                           
   519                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 26:     ADCON0bits.CHS = 0;
   520     00DD  30C3               	movlw	-61
   521     00DE  059F               	andwf	31,f	;volatile
   522                           
   523                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 27:     _delay((unsigned long)((100)*(400000
      +                          0/4000000.0)));
   524     00DF  3021               	movlw	33
   525     00E0  00F2               	movwf	??_adc_setup
   526     00E1                     u37:
   527     00E1  0BF2               	decfsz	??_adc_setup,f
   528     00E2  28E1               	goto	u37
   529     00E3                     l693:
   530                           
   531                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 28:     ADCON0bits.ADON = 1;
   532     00E3  1283               	bcf	3,5	;RP0=0, select bank0
   533     00E4  1303               	bcf	3,6	;RP1=0, select bank0
   534     00E5  141F               	bsf	31,0	;volatile
   535                           
   536                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 29:     _delay((unsigned long)((100)*(400000
      +                          0/4000000.0)));
   537     00E6  3021               	movlw	33
   538     00E7  00F2               	movwf	??_adc_setup
   539     00E8                     u47:
   540     00E8  0BF2               	decfsz	??_adc_setup,f
   541     00E9  28E8               	goto	u47
   542     00EA                     l58:
   543     00EA  0008               	return
   544     00EB                     __end_of_adc_setup:
   545                           
   546                           	psect	text2
   547     00FA                     __ptext2:	
   548 ;; *************** function _adc_read *****************
   549 ;; Defined at:
   550 ;;		line 99 in file "C:/Users/kirby/MPLABXProjects/adc.X/adc.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  channel         1    wreg     unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  channel         1    3[COMMON] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         1       0       0       0       0
   566 ;;      Temps:          1       0       0       0       0
   567 ;;      Totals:         2       0       0       0       0
   568 ;;Total ram usage:        2 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; Hardware stack levels required when called: 2
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578     00FA                     _adc_read:	
   579                           ;psect for function _adc_read
   580                           
   581                           
   582                           ;incstack = 0
   583                           ; Regs used in _adc_read: [wreg+status,2+status,0]
   584                           ;adc_read@channel stored from wreg
   585     00FA  00F3               	movwf	adc_read@channel
   586     00FB                     l705:
   587                           
   588                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 100:     ADCON0bits.CHS = channel;
   589     00FB  0873               	movf	adc_read@channel,w
   590     00FC  00F2               	movwf	??_adc_read
   591     00FD  0DF2               	rlf	??_adc_read,f
   592     00FE  0DF2               	rlf	??_adc_read,f
   593     00FF  1283               	bcf	3,5	;RP0=0, select bank0
   594     0100  1303               	bcf	3,6	;RP1=0, select bank0
   595     0101  081F               	movf	31,w	;volatile
   596     0102  0672               	xorwf	??_adc_read,w
   597     0103  39C3               	andlw	-61
   598     0104  0672               	xorwf	??_adc_read,w
   599     0105  009F               	movwf	31	;volatile
   600     0106                     l707:
   601                           
   602                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 101:     ADCON0bits.GO = 1;
   603     0106  149F               	bsf	31,1	;volatile
   604     0107                     l81:
   605     0107  0008               	return
   606     0108                     __end_of_adc_read:
   607                           
   608                           	psect	text3
   609     0013                     __ptext3:	
   610 ;; *************** function _adc_channel *****************
   611 ;; Defined at:
   612 ;;		line 35 in file "C:/Users/kirby/MPLABXProjects/adc.X/adc.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  channel         2    2[COMMON] int 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         2       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0
   629 ;;      Totals:         2       0       0       0       0
   630 ;;Total ram usage:        2 bytes
   631 ;; Hardware stack levels used: 1
   632 ;; Hardware stack levels required when called: 2
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640     0013                     _adc_channel:	
   641                           ;psect for function _adc_channel
   642                           
   643     0013                     l749:	
   644                           ;incstack = 0
   645                           ; Regs used in _adc_channel: [wreg-fsr0h+status,2+status,0]
   646                           
   647                           
   648                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 36:     switch (channel)
   649     0013  2876               	goto	l753
   650     0014                     l62:	
   651                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 37:     {case 0:
   652                           
   653                           
   654                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 38:         ANSELbits.ANS0 = 1;
   655     0014  1683               	bsf	3,5	;RP0=1, select bank3
   656     0015  1703               	bsf	3,6	;RP1=1, select bank3
   657     0016  1408               	bsf	8,0	;volatile
   658                           
   659                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 39:         TRISAbits.TRISA0 = 1;
   660     0017  1683               	bsf	3,5	;RP0=1, select bank1
   661     0018  1303               	bcf	3,6	;RP1=0, select bank1
   662     0019  1405               	bsf	5,0	;volatile
   663                           
   664                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 40:         break;
   665     001A  28A7               	goto	l78
   666     001B                     l64:	
   667                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 41:     case 1:
   668                           
   669                           
   670                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 42:         ANSELbits.ANS1 = 1;
   671     001B  1683               	bsf	3,5	;RP0=1, select bank3
   672     001C  1703               	bsf	3,6	;RP1=1, select bank3
   673     001D  1488               	bsf	8,1	;volatile
   674                           
   675                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 43:         TRISAbits.TRISA1 = 1;
   676     001E  1683               	bsf	3,5	;RP0=1, select bank1
   677     001F  1303               	bcf	3,6	;RP1=0, select bank1
   678     0020  1485               	bsf	5,1	;volatile
   679                           
   680                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 44:         break;
   681     0021  28A7               	goto	l78
   682     0022                     l65:	
   683                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 45:     case 2:
   684                           
   685                           
   686                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 46:         ANSELbits.ANS2 = 1;
   687     0022  1683               	bsf	3,5	;RP0=1, select bank3
   688     0023  1703               	bsf	3,6	;RP1=1, select bank3
   689     0024  1508               	bsf	8,2	;volatile
   690                           
   691                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 47:         TRISAbits.TRISA2 = 1;
   692     0025  1683               	bsf	3,5	;RP0=1, select bank1
   693     0026  1303               	bcf	3,6	;RP1=0, select bank1
   694     0027  1505               	bsf	5,2	;volatile
   695                           
   696                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 48:         break;
   697     0028  28A7               	goto	l78
   698     0029                     l66:	
   699                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 49:     case 3:
   700                           
   701                           
   702                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 50:         ANSELbits.ANS3 = 1;
   703     0029  1683               	bsf	3,5	;RP0=1, select bank3
   704     002A  1703               	bsf	3,6	;RP1=1, select bank3
   705     002B  1588               	bsf	8,3	;volatile
   706                           
   707                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 51:         TRISAbits.TRISA3 = 1;
   708     002C  1683               	bsf	3,5	;RP0=1, select bank1
   709     002D  1303               	bcf	3,6	;RP1=0, select bank1
   710     002E  1585               	bsf	5,3	;volatile
   711                           
   712                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 52:         break;
   713     002F  28A7               	goto	l78
   714     0030                     l67:	
   715                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 53:     case 4:
   716                           
   717                           
   718                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 54:         ANSELbits.ANS4 = 1;
   719     0030  1683               	bsf	3,5	;RP0=1, select bank3
   720     0031  1703               	bsf	3,6	;RP1=1, select bank3
   721     0032  1608               	bsf	8,4	;volatile
   722                           
   723                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 55:         TRISAbits.TRISA5 = 1;
   724     0033  1683               	bsf	3,5	;RP0=1, select bank1
   725     0034  1303               	bcf	3,6	;RP1=0, select bank1
   726     0035  1685               	bsf	5,5	;volatile
   727                           
   728                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 56:         break;
   729     0036  28A7               	goto	l78
   730     0037                     l68:	
   731                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 57:     case 5:
   732                           
   733                           
   734                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 58:         ANSELbits.ANS5 = 1;
   735     0037  1683               	bsf	3,5	;RP0=1, select bank3
   736     0038  1703               	bsf	3,6	;RP1=1, select bank3
   737     0039  1688               	bsf	8,5	;volatile
   738                           
   739                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 59:         TRISEbits.TRISE0 = 1;
   740     003A  1683               	bsf	3,5	;RP0=1, select bank1
   741     003B  1303               	bcf	3,6	;RP1=0, select bank1
   742     003C  1409               	bsf	9,0	;volatile
   743                           
   744                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 60:         break;
   745     003D  28A7               	goto	l78
   746     003E                     l69:	
   747                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 61:     case 6:
   748                           
   749                           
   750                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 62:         ANSELbits.ANS6 = 1;
   751     003E  1683               	bsf	3,5	;RP0=1, select bank3
   752     003F  1703               	bsf	3,6	;RP1=1, select bank3
   753     0040  1708               	bsf	8,6	;volatile
   754                           
   755                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 63:         TRISEbits.TRISE1 = 1;
   756     0041  1683               	bsf	3,5	;RP0=1, select bank1
   757     0042  1303               	bcf	3,6	;RP1=0, select bank1
   758     0043  1489               	bsf	9,1	;volatile
   759                           
   760                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 64:         break;
   761     0044  28A7               	goto	l78
   762     0045                     l70:	
   763                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 65:     case 7:
   764                           
   765                           
   766                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 66:         ANSELbits.ANS7 = 1;
   767     0045  1683               	bsf	3,5	;RP0=1, select bank3
   768     0046  1703               	bsf	3,6	;RP1=1, select bank3
   769     0047  1788               	bsf	8,7	;volatile
   770                           
   771                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 67:         TRISEbits.TRISE2 = 1;
   772     0048  1683               	bsf	3,5	;RP0=1, select bank1
   773     0049  1303               	bcf	3,6	;RP1=0, select bank1
   774     004A  1509               	bsf	9,2	;volatile
   775                           
   776                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 68:         break;
   777     004B  28A7               	goto	l78
   778     004C                     l71:	
   779                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 69:     case 8:
   780                           
   781                           
   782                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 70:         ANSELHbits.ANS8 = 1;
   783     004C  1683               	bsf	3,5	;RP0=1, select bank3
   784     004D  1703               	bsf	3,6	;RP1=1, select bank3
   785     004E  1409               	bsf	9,0	;volatile
   786                           
   787                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 71:         TRISBbits.TRISB2 = 1;
   788     004F  1683               	bsf	3,5	;RP0=1, select bank1
   789     0050  1303               	bcf	3,6	;RP1=0, select bank1
   790     0051  1506               	bsf	6,2	;volatile
   791                           
   792                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 72:         break;
   793     0052  28A7               	goto	l78
   794     0053                     l72:	
   795                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 73:     case 9:
   796                           
   797                           
   798                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 74:         ANSELHbits.ANS9 = 1;
   799     0053  1683               	bsf	3,5	;RP0=1, select bank3
   800     0054  1703               	bsf	3,6	;RP1=1, select bank3
   801     0055  1489               	bsf	9,1	;volatile
   802                           
   803                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 75:         TRISBbits.TRISB3 = 1;
   804     0056  1683               	bsf	3,5	;RP0=1, select bank1
   805     0057  1303               	bcf	3,6	;RP1=0, select bank1
   806     0058  1586               	bsf	6,3	;volatile
   807                           
   808                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 76:         break;
   809     0059  28A7               	goto	l78
   810     005A                     l73:	
   811                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 77:     case 10:
   812                           
   813                           
   814                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 78:         ANSELHbits.ANS10 = 1;
   815     005A  1683               	bsf	3,5	;RP0=1, select bank3
   816     005B  1703               	bsf	3,6	;RP1=1, select bank3
   817     005C  1509               	bsf	9,2	;volatile
   818                           
   819                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 79:         TRISBbits.TRISB1 = 1;
   820     005D  1683               	bsf	3,5	;RP0=1, select bank1
   821     005E  1303               	bcf	3,6	;RP1=0, select bank1
   822     005F  1486               	bsf	6,1	;volatile
   823                           
   824                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 80:         break;
   825     0060  28A7               	goto	l78
   826     0061                     l74:	
   827                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 81:     case 11:
   828                           
   829                           
   830                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 82:         ANSELHbits.ANS11 = 1;
   831     0061  1683               	bsf	3,5	;RP0=1, select bank3
   832     0062  1703               	bsf	3,6	;RP1=1, select bank3
   833     0063  1589               	bsf	9,3	;volatile
   834                           
   835                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 83:         TRISBbits.TRISB4 = 1;
   836     0064  1683               	bsf	3,5	;RP0=1, select bank1
   837     0065  1303               	bcf	3,6	;RP1=0, select bank1
   838     0066  1606               	bsf	6,4	;volatile
   839                           
   840                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 84:         break;
   841     0067  28A7               	goto	l78
   842     0068                     l75:	
   843                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 85:     case 12:
   844                           
   845                           
   846                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 86:         ANSELHbits.ANS12 = 1;
   847     0068  1683               	bsf	3,5	;RP0=1, select bank3
   848     0069  1703               	bsf	3,6	;RP1=1, select bank3
   849     006A  1609               	bsf	9,4	;volatile
   850                           
   851                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 87:         TRISBbits.TRISB0 = 1;
   852     006B  1683               	bsf	3,5	;RP0=1, select bank1
   853     006C  1303               	bcf	3,6	;RP1=0, select bank1
   854     006D  1406               	bsf	6,0	;volatile
   855                           
   856                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 88:         break;
   857     006E  28A7               	goto	l78
   858     006F                     l76:	
   859                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 89:     case 13:
   860                           
   861                           
   862                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 90:         ANSELHbits.ANS13 = 1;
   863     006F  1683               	bsf	3,5	;RP0=1, select bank3
   864     0070  1703               	bsf	3,6	;RP1=1, select bank3
   865     0071  1689               	bsf	9,5	;volatile
   866                           
   867                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 91:         TRISBbits.TRISB5 = 1;
   868     0072  1683               	bsf	3,5	;RP0=1, select bank1
   869     0073  1303               	bcf	3,6	;RP1=0, select bank1
   870     0074  1686               	bsf	6,5	;volatile
   871                           
   872                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 92:         break;
   873     0075  28A7               	goto	l78
   874     0076                     l753:
   875                           
   876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   877                           ; Switch size 1, requested type "simple"
   878                           ; Number of cases is 1, Range of values is 0 to 0
   879                           ; switch strategies available:
   880                           ; Name         Instructions Cycles
   881                           ; simple_byte            4     3 (average)
   882                           ; direct_byte           11     8 (fixed)
   883                           ; jumptable            260     6 (fixed)
   884                           ;	Chosen strategy is simple_byte
   885     0076  0873               	movf	adc_channel@channel+1,w
   886     0077  3A00               	xorlw	0	; case 0
   887     0078  1903               	skipnz
   888     0079  287B               	goto	l789
   889     007A  28A7               	goto	l78
   890     007B                     l789:
   891                           
   892                           ; Switch size 1, requested type "simple"
   893                           ; Number of cases is 14, Range of values is 0 to 13
   894                           ; switch strategies available:
   895                           ; Name         Instructions Cycles
   896                           ; simple_byte           43    22 (average)
   897                           ; direct_byte           50     8 (fixed)
   898                           ; jumptable            260     6 (fixed)
   899                           ;	Chosen strategy is simple_byte
   900     007B  0872               	movf	adc_channel@channel,w
   901     007C  3A00               	xorlw	0	; case 0
   902     007D  1903               	skipnz
   903     007E  2814               	goto	l62
   904     007F  3A01               	xorlw	1	; case 1
   905     0080  1903               	skipnz
   906     0081  281B               	goto	l64
   907     0082  3A03               	xorlw	3	; case 2
   908     0083  1903               	skipnz
   909     0084  2822               	goto	l65
   910     0085  3A01               	xorlw	1	; case 3
   911     0086  1903               	skipnz
   912     0087  2829               	goto	l66
   913     0088  3A07               	xorlw	7	; case 4
   914     0089  1903               	skipnz
   915     008A  2830               	goto	l67
   916     008B  3A01               	xorlw	1	; case 5
   917     008C  1903               	skipnz
   918     008D  2837               	goto	l68
   919     008E  3A03               	xorlw	3	; case 6
   920     008F  1903               	skipnz
   921     0090  283E               	goto	l69
   922     0091  3A01               	xorlw	1	; case 7
   923     0092  1903               	skipnz
   924     0093  2845               	goto	l70
   925     0094  3A0F               	xorlw	15	; case 8
   926     0095  1903               	skipnz
   927     0096  284C               	goto	l71
   928     0097  3A01               	xorlw	1	; case 9
   929     0098  1903               	skipnz
   930     0099  2853               	goto	l72
   931     009A  3A03               	xorlw	3	; case 10
   932     009B  1903               	skipnz
   933     009C  285A               	goto	l73
   934     009D  3A01               	xorlw	1	; case 11
   935     009E  1903               	skipnz
   936     009F  2861               	goto	l74
   937     00A0  3A07               	xorlw	7	; case 12
   938     00A1  1903               	skipnz
   939     00A2  2868               	goto	l75
   940     00A3  3A01               	xorlw	1	; case 13
   941     00A4  1903               	skipnz
   942     00A5  286F               	goto	l76
   943     00A6  28A7               	goto	l78
   944     00A7                     l78:
   945     00A7  0008               	return
   946     00A8                     __end_of_adc_channel:
   947                           
   948                           	psect	text4
   949     00EB                     __ptext4:	
   950 ;; *************** function _isr *****************
   951 ;; Defined at:
   952 ;;		line 47 in file "main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, pclath, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0
   968 ;;      Temps:          2       0       0       0       0
   969 ;;      Totals:         2       0       0       0       0
   970 ;;Total ram usage:        2 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 1
   973 ;; This function calls:
   974 ;;		_adc_output
   975 ;; This function is called by:
   976 ;;		Interrupt level 1
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980     00EB                     _isr:	
   981                           ;psect for function _isr
   982                           
   983     00EB                     i1l727:
   984     00EB  120A  118A  2108  120A  118A  	fcall	_adc_output
   985     00F0  1283               	bcf	3,5	;RP0=0, select bank0
   986     00F1  1303               	bcf	3,6	;RP1=0, select bank0
   987     00F2  0087               	movwf	7	;volatile
   988     00F3                     i1l27:
   989     00F3  0871               	movf	??_isr+1,w
   990     00F4  008A               	movwf	10
   991     00F5  0E70               	swapf	??_isr,w
   992     00F6  0083               	movwf	3
   993     00F7  0EFE               	swapf	btemp,f
   994     00F8  0E7E               	swapf	btemp,w
   995     00F9  0009               	retfie
   996     00FA                     __end_of_isr:
   997                           
   998                           	psect	intentry
   999     0004                     __pintentry:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _isr: [wreg+pclath+cstack]
  1002                           
  1003     0004                     interrupt_function:
  1004     007E                     saved_w	set	btemp
  1005     0004  00FE               	movwf	btemp
  1006     0005  0E03               	swapf	3,w
  1007     0006  00F0               	movwf	??_isr
  1008     0007  080A               	movf	10,w
  1009     0008  00F1               	movwf	??_isr+1
  1010     0009  120A  118A  28EB   	ljmp	_isr
  1011                           
  1012                           	psect	text5
  1013     0108                     __ptext5:	
  1014 ;; *************** function _adc_output *****************
  1015 ;; Defined at:
  1016 ;;		line 106 in file "C:/Users/kirby/MPLABXProjects/adc.X/adc.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      unsigned char 
  1023 ;; Registers used:
  1024 ;;		wreg
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1030 ;;      Params:         0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0
  1033 ;;      Totals:         0       0       0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_isr
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043     0108                     _adc_output:	
  1044                           ;psect for function _adc_output
  1045                           
  1046     0108                     i1l709:	
  1047                           ;incstack = 0
  1048                           ; Regs used in _adc_output: [wreg]
  1049                           
  1050                           
  1051                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 107:     if (PIR1bits.ADIF == 1) {
  1052     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1053     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1054     010A  1F0C               	btfss	12,6	;volatile
  1055     010B  290D               	goto	u1_21
  1056     010C  290E               	goto	u1_20
  1057     010D                     u1_21:
  1058     010D  290F               	goto	i1l713
  1059     010E                     u1_20:
  1060     010E                     i1l711:
  1061                           
  1062                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 108:         PIR1bits.ADIF = 0;
  1063     010E  130C               	bcf	12,6	;volatile
  1064     010F                     i1l713:
  1065                           
  1066                           ;C:/Users/kirby/MPLABXProjects/adc.X/adc.c: 110:     return ADRESH;
  1067     010F  081E               	movf	30,w	;volatile
  1068     0110                     i1l85:
  1069     0110  0008               	return
  1070     0111                     __end_of_adc_output:
  1071     007E                     btemp	set	126	;btemp
  1072     007E                     wtemp0	set	126
  1073                           
  1074                           	psect	idloc
  1075                           
  1076                           ;Config register IDLOC0 @ 0x2000
  1077                           ;	unspecified, using default values
  1078     2000                     	org	8192
  1079     2000  3FFF               	dw	16383
  1080                           
  1081                           ;Config register IDLOC1 @ 0x2001
  1082                           ;	unspecified, using default values
  1083     2001                     	org	8193
  1084     2001  3FFF               	dw	16383
  1085                           
  1086                           ;Config register IDLOC2 @ 0x2002
  1087                           ;	unspecified, using default values
  1088     2002                     	org	8194
  1089     2002  3FFF               	dw	16383
  1090                           
  1091                           ;Config register IDLOC3 @ 0x2003
  1092                           ;	unspecified, using default values
  1093     2003                     	org	8195
  1094     2003  3FFF               	dw	16383
  1095                           
  1096                           	psect	config
  1097                           
  1098                           ;Config register CONFIG1 @ 0x2007
  1099                           ;	Oscillator Selection bits
  1100                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1101                           ;	Watchdog Timer Enable bit
  1102                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1103                           ;	Power-up Timer Enable bit
  1104                           ;	PWRTE = OFF, PWRT disabled
  1105                           ;	RE3/MCLR pin function select bit
  1106                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1107                           ;	Code Protection bit
  1108                           ;	CP = OFF, Program memory code protection is disabled
  1109                           ;	Data Code Protection bit
  1110                           ;	CPD = OFF, Data memory code protection is disabled
  1111                           ;	Brown Out Reset Selection bits
  1112                           ;	BOREN = OFF, BOR disabled
  1113                           ;	Internal External Switchover bit
  1114                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1115                           ;	Fail-Safe Clock Monitor Enabled bit
  1116                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1117                           ;	Low Voltage Programming Enable bit
  1118                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1119                           ;	In-Circuit Debugger Mode bit
  1120                           ;	DEBUG = 0x1, unprogramme  1121     2007                     	org	8199
  1122     2007  20D4               	dw	8404
  1123                           
  1124                           ;Config register CONFIG2 @ 0x2008
  1125                           ;	Brown-out Reset Selection bit
  1126                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1127                           ;	Flash Program Memory Self Write Enable bits
  1128                           ;	WRT = OFF, Write protection off
  1129     2008                     	org	8200
  1130     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc_channel
    _main->_adc_read

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     158
                                              4 COMMON     2     2      0
                        _adc_channel
                           _adc_read
                          _adc_setup
 ---------------------------------------------------------------------------------
 (1) _adc_setup                                            1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     2      0      15
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_channel                                          2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                         _adc_output
 ---------------------------------------------------------------------------------
 (3) _adc_output                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_channel
   _adc_read
   _adc_setup

 _isr (ROOT)
   _adc_output

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 15 23:18:16 2023

                     l70 0045                       l62 0014                       l71 004C  
                     l72 0053                       l64 001B                       l73 005A  
                     l65 0022                       l81 0107                       l74 0061  
                     l66 0029                       l58 00EA                       l75 0068  
                     l67 0030                       l76 006F                       l68 0037  
                     l69 003E                       l78 00A7                       u27 00BE  
                     u37 00E1                       u47 00E8                      l705 00FB  
                    l707 0106                      l753 0076                      l681 00CF  
                    l761 00AF                      l691 00DD                      l683 00D0  
                    l763 00B4                      l749 0013                      l693 00E3  
                    l685 00D3                      l677 00CA                      l765 00BC  
                    l687 00D6                      l679 00CC                      l767 00C0  
                    l759 00A8                      l689 00D7                      l789 007B  
                    _isr 00EB                     ?_isr 0070                     _PIE1 008C  
                   i1l27 00F3                     i1l85 0110                     u1_20 010E  
                   u1_21 010D                     _main 00A8                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l711 010E                    i1l713 010F  
                  i1l709 0108                    i1l727 00EB                    _PORTC 0007  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00CA  
                 ??_main 0074                   _ADRESH 001E                   _ANSELH 0189  
       __end_of_adc_read 0108                   _INTCON 000B                   main@ch 0075  
                 saved_w 007E  __end_of__initialization 000F           __pcstackCOMMON 0070  
             _adc_output 0108               __pmaintext 00A8            ??_adc_channel 0074  
             __pintentry 0004                ?_adc_read 0070        __end_of_adc_setup 00EB  
            ?_adc_output 0070                _ANSELbits 0188               ??_adc_read 0072  
                __ptext1 00CA                  __ptext2 00FA                  __ptext3 0013  
                __ptext4 00EB                  __ptext5 0108      __end_of_adc_channel 00A8  
   end_of_initialization 000F       adc_channel@channel 0072                _TRISAbits 0085  
              _TRISBbits 0086                _TRISEbits 0089              _adc_channel 0013  
    start_initialization 000F              __end_of_isr 00FA          adc_read@channel 0073  
              ___latbits 0002                _adc_setup 00CA             ??_adc_output 0070  
             ?_adc_setup 0070        interrupt_function 0004       __end_of_adc_output 0111  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
           ?_adc_channel 0072                 _adc_read 00FA               _ANSELHbits 0189  
            ??_adc_setup 0072                 intlevel1 0000  
